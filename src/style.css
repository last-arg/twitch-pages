@tailwind base;
@tailwind components;

h2,
h3 {
  max-width: 60ch;
}

img {
  width: 100%;
}

.contain-content {
  contain: content
}

.contain-strict {
  contain: strict
}

.stack-m-4 {
  --space: 1rem
}

.stack-m-0 {
  --space: 0
}


.stack {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

/* To deal with template elements */
.stack > template + *,
.stack > * {
  margin-top: 0;
  margin-bottom: 0;
}

.stack > * + * {
  margin-top: var(--space, 1.5rem);
}

/*
If last row isn't filled with items the item(s) will all the space they can.
Usually this isn't wanted behaviour. To make things visually balanced we could
add empty (might need to set height to 0) html elements to end of container.
Number of empty elements = max_column_count - 1
And make sure to hide the elements from accesibility tools.

Can use gap attribute for spacing instead of padding and margin if don't need
wider browser support
*/
.flex-grid {
  display: flex;
  flex-wrap: wrap;
  margin: calc(var(--grid-gap, 1rem) * -0.5);
}

/*
If you have element inside grid item that makes grid item wider than wanted then
you can set overflow: hidden to grid item to fix it.
For example if you have white-space: nowrap on some element (to truncate it).
*/
.flex-grid > * {
  flex: 1 1 var(--grid-min, 20rem);
  padding: calc(var(--grid-gap, 1rem) * 0.5);
}

.grid {
  display: grid;
  grid-gap: var(--grid-gap, 1rem);
  /*
    This will produce horizontal scrollbar when going below minimum value (--grid-min).
    Solutions:
    1) Use CSS min function to figure out if provided value or 100% is smaller.
    2) For wider browser support can manually write media query that changes
       attribute grid-template-columns value.
  */
  grid-template-columns: repeat(auto-fit, minmax(var(--grid-min, 20rem), 1fr));
}

@supports (width: min(250px, 100%)) {
  .grid {
    grid-template-columns: repeat(auto-fit, minmax(min(var(--grid-min, 20rem), 100%), 1fr));
  }
}

.grid-min-80 {
  --grid-min: 20rem
}

.grid-min-72 {
  --grid-min: 18rem
}

.grid-min-64 {
  --grid-min: 16rem
}

.grid-gap-6 {
  --grid-gap: 1.5rem
}

.grid-gap-8 {
  --grid-gap: 2rem
}

.cover {
  display: flex;
  flex-direction: column;
}
.cover > h1 {
  margin-top: auto;
  margin-bottom: auto;
}

.cover > * {
  margin-top: 1rem;
  margin-bottom: 1rem;
}
.cover > h1 {
  margin-top: auto;
  margin-bottom: auto;
}
.cover > :first-child:not(h1) {
  margin-top: 0;
}
.cover > :last-child:not(h1) {
  margin-bottom: 0;
}


.switcher {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  --threshold: 30rem;
}
.switcher > * {
  flex-grow: 1;
  flex-basis: calc((var(--threshold) - 100%) * 999);
}

.icon {
  /* 0.75 is about the height of tall characters */
  /* for small characters can use 1ex unit which is height of letter 'x' */
  height: 0.75em;
  width: 0.75em;
}


@tailwind utilities;
