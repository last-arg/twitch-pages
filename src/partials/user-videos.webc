---
permalink: "{{'public/partials/user-videos.html'}}"
---
<div>
  <div>
    <div id="user-header" class="flex">
      <div hx-ext="twitch-api"
        hx-get="/helix/users"
        hx-trigger="load"
        hx-target="#user-header"
      ></div>
      <placeholder-title name="user"></placeholder-title>
      <template webc:keep webc:type="11ty" id="user-header-template">
        <heading-link @href="https://www.twitch.tv/:user_login/videos">
          <img class="w-14" src="#user_profile_image_url" 
            :width="global.config.image.user.width" :height="global.config.image.user.height">
          <p>:user_display_name</p>
        </heading-link>
        <div class="btn-container">
          <button-follow 
            @init="$store.profile_images.setImage(':user_id', '#user_profile_image_url')"
            @fn_has_id="$store.streams.hasId(':user_id')"
            @on_click="$store.streams.toggle(':user_id', ':user_login', ':user_display_name')"
          ></button-follow>
        </div>
        <div class="user-live self-center fluid-ml-xs" x-bind:class="{hidden: game === ''}"
          x-data="{game: ''}" x-init="game = await $store.global.getLiveUserGame(':user_id')"
        >
          <span>LIVE</span>
          <p x-text="game"></p>
        </div>
      </template>
    </div>
  </div>
  <div>
    <h3>Videos</h3>
    <div>
      <div class="flex">
        <div x-data="userVideosFilter()">
          <ul class="flex" role="list">
            <li>
              <button type="button"
                x-bind:class="{checked: $store.global.settings['video-archives'] === 'on'}"
                x-on:click="toggleFilter('archive')"
              >
                <span>&nbsp;</span>
              </button>
              <button type="button"
                x-on:click="onlyFilter('archive')"
              >
                Archives (<span id="archives-count">0</span>)
              </button>
            </li>
            <li>
              <button type="button"
                x-bind:class="{checked: $store.global.settings['video-uploads'] === 'on'}"
                x-on:click="toggleFilter('upload')"
              >
                <span>&nbsp;</span>
              </button>
              <button type="button"
                x-on:click="onlyFilter('upload')"
              >
                Uploads (<span id="uploads-count">0</span>)
              </button>
            </li>
            <li>
              <button type="button"
                x-bind:class="{checked: $store.global.settings['video-highlights'] === 'on'}"
                x-on:click="toggleFilter('highlight')"
              >
                <span>&nbsp;</span>
              </button>
              <button type="button"
                x-on:click="onlyFilter('highlight')"
              >
                Highlights (<span id="highlights-count">0</span>)
              </button>
            </li>
          </ul>
          <div>
            <span>&nbsp;</span>
            <div>
              <button type="button" x-on:click="showAll()">Show all</button>
            </div>
          </div>
        </div>
        <form style="" x-data="search" @reset="formReset()">
          <label for="search">Search video title</label>
          <input type="search" id="search" placeholder="Video title" @input.debounce.100ms="searchTitle()" value="">
          <button type="reset">Reset</button>
        </form>
      </div>
    </div>
    <div id="feedback"></div>
    <ul class="filter-search l-grid" style="--l-grid-min: 18rem; --l-grid-gap: 1.8rem 1.2rem" role="list"
      x-init="
        if ($store.global.settings['video-archives'] !== 'on') $el.classList.add('no-archives')
        if ($store.global.settings['video-uploads'] !== 'on') $el.classList.add('no-uploads')
        if ($store.global.settings['video-highlights'] !== 'on') $el.classList.add('no-highlights')
      "
    >
      <template id="user-video-template">
        <li class="video" data-video-type=":video_type" data-title=":encoded_video_title">
          <a class="video-link" href="#video_url" title=":video_title">
            <div class="video-img-wrapper">
              <img src="#img_url" alt="" 
                :width="global.config.image.video.width" 
                :height="global.config.image.video.height"
              >
              <span class="video-info video-type" title=":video_type_title">
                <svg aria-hidden="true" focusable="false">
                  <use href="/public/assets/icons.svg#:video_icon"></use>
                </svg>
                <span class="sr-only">:video_type</span>
              </span>
              <div class="video-info video-duration">
                <span>:video_duration_str</span>
                <span title=":date_str">:video_date_str</span>
              </div>
            </div>
            <div class="video-title">
              <p>:video_title</p>
              <svg aria-hidden="true" focusable="false">
                <use href="/public/assets/icons.svg#external-link"></use>
              </svg>
            </div>
          </a>
        </li>
      </template>
    </ul>
    <btn-load-more class="block fluid-my-xl" @hx_get="/helix/videos" @hx_target=".filter-search">
      <input class="req-param" id="param-user_id" type="hidden" name="user_id" value="">
    </btn-load-more>
  </div>
</div>
<style>
.user-live {
  font-size: var(--step--2);
}

.user-live span {
  background-color: var(--red-4);
  border-radius: var(--radius-1);
  color: var(--bg);
  padding-inline: var(--space-3xs);
}

.video-link {
  display: block;
  text-decoration: none;
  color: currentColor;
}

.video-link:is(:hover, :focus) {
  color: var(--violet-8);
  text-decoration: underline;
}

.video-img-wrapper {
  position: relative;
}

.video-img-wrapper img {
  display: block;
  border-radius: var(--radius-2);
}

.video-info {
  opacity: .9;
  position: absolute;
  left: 0;
  margin: var(--space-3xs);
}

.video-type {
  top: 0;
  border-radius: var(--radius-1);
  --bg-icon: white;
  color: var(--gray-10);
  background-color: var(--bg-icon);
  padding-inline: 3px;
}

.video-type svg {
  display: block;
}

.video-duration {
  bottom: 0;
  right: 0;
  font-size: var(--step--2);
  color: var(--gray-1);
  display: flex;
  justify-content: space-between;
}

.video-duration span {
  padding-inline: 3px;
  background-color: var(--gray-10);
  display: block;
  border-radius: var(--radius-1);
}

.video[data-video-type=archive] .video-type {
  --bg-icon: var(--lime-3);
}

.video[data-video-type=upload] .video-type {
  --bg-icon: var(--blue-3);
}

.video[data-video-type=highlight] .video-type {
  --bg-icon: var(--orange-3);
}

.video-title {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: white;
  padding: var(--space-3xs);
  border-radius: var(--radius-2);
}

.video-title p {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

.video-title svg {
  flex-grow: 0;
  flex-shrink: 0;
}

</style>

