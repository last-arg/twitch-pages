.sidebar-header h2 {
  display: flex;
  align-items: center;
  gap: var(--space-3xs);
  font-size: var(--step--1);
  background-color: var(--violet-9);
  color: var(--text2);
  padding: var(--space-3xs) var(--space-2xs);
}

.sidebar-header svg {
  width: 1.2em;
  height: 1.2em;
}

.btn-close {
  display: flex;
  align-items: center;
  background-color: var(--violet-9);  
  color: var(--text2);
  padding: var(--space-3xs) var(--space-2xs);
  opacity: .7;
}

.btn-close:hover,
.btn-close:focus {
  opacity: 1;
}

.btn-close svg {
  width: 0.9em;
  height: 0.9em;
}
.link-box {
  display: flex;
  --card-bg: var(--gray-9);
  background: var(--card-bg);
  border-left: var(--space-3xs) solid var(--card-bg);
  padding-inline-start: var(--space-3xs);
  text-decoration: none;
  color: var(--gray-3);
  width: 100%;
}

.link-title {
  padding: var(--space-3xs) var(--space-2xs);
  font-size: var(--step--1);
  display: flex;
  flex-direction: column;
  justify-content: center;
  width: 100%;
  position: relative;
}

.link-title p {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  overflow: hidden;
}


.link-box:hover,
.link-box:focus {
  border-left-color: var(--violet-8);
  color: var(--gray-0);
}

.link-box[data-card=category] .link-title p {
  -webkit-line-clamp: 2;
}

.link-box[data-card=user-videos] .link-title p {
  -webkit-line-clamp: 1;
}

.link-box[data-card=category] img {
  height: 4rem;
  width: auto;
}

.link-box[data-card=user-videos] img {
  width: 4rem;
  height: 4rem;
}
.button-follow {
  padding: 0;
  background: transparent;
  color: var(--actions-color, var(--text6));
  display: block;
}

.button-follow:focus,
.button-follow:hover {
  color: var(--text4);
}

.button-follow use { display: none; }

/*
 * Could also use '... use:first-child' or '... use:nth-child(2)' if order
 * is known and won't change. Might be safer choice because svg icon name
 * might change. Although somebody might also change <use> order without
 * knowing order is important. In both cases a comment might be helpful.
 * 
 * Adding a class probably be the safest bet. Choosing a solution comes
 * down to how often and how the HTML code might be changed.
 * 
 * Could also write some defensive CSS which indicates that something is
 * wrong.
 */
.button-follow use[href$="star-empty"],
.button-follow[data-is-followed="false"] use[href$="star-empty"],
.button-follow[data-is-followed="true"] use[href$="star-full"] {
  display: initial;
}
follow-star {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  background: var(--gray-9);
  line-height: 1;
  padding: var(--space-3xs) var(--space-2xs);
  --actions-color: var(--gray-6);
  color: var(--actions-color);

}

.scroll-container follow-star {
  margin-inline-start: 2px;
}

follow-star a {
  color: inherit;
}

follow-star a:hover,
follow-star a:focus {
  color: var(--violet-8);
}
.scroll-container {
  padding-block: var(--space-s);
  overflow: hidden;
  position: relative;
}

.scroll-container::before,
.scroll-container::after {
  content: '';
  position: absolute;
  left: 0;
  width: 100%;
  height: 3rem;
  pointer-events: none;
  --dir: to top;
  background-image: linear-gradient(var(--dir), var(--gradient-shadow));
  display: none;
  z-index: 1;
}

.scroll-container::before {
  top: var(--space-s);
}

.scroll-container::after {
  bottom: var(--space-s);
  --dir: to bottom;
}

.scroll-container[data-scroll-shadow=top]::before,
.scroll-container[data-scroll-shadow=bottom]::after,
.scroll-container[data-scroll-shadow=both]::before,
.scroll-container[data-scroll-shadow=both]::after {
  display: block;
}

.scrollbox {
  height: 100%;
  overflow: auto;
  overscroll-behavior: contain;
}
.js-search-list:empty,
.search-feedback:empty {
  display: none;
}

.search-feedback {
  width: fit-content;
  margin: auto;
  position: absolute;
  top: 40px;
  left: 0;
  right: 0;
  z-index: 1;
  background: var(--gray-8);
  padding: var(--space-3xs) var(--space-2xs);
  font-size: var(--step--1);
}
.menu-item {
  display: block;
  position: relative;
  height: 100%;
  font-size: var(--step--1);
  text-decoration: none;
  --_bg-item: var(--surface4);
  background-color: var(--_bg-item);
  color: var(--text2);
  padding-block-start: var(--space-3xs);
  padding-inline: var(--space-2xs);
  --border-color: var(--_bg-item);
  border-bottom: var(--space-3xs) solid var(--border-color);
}

.menu-item:hover,
.menu-item:focus {
  --border-color: var(--surface6);
}

.menu-item[aria-expanded=true] {
  border-bottom-color: var(--surface5);
}

.menu-item svg {
  width: 1.2em;
  height: 1.2em;
}

.streams-count {
  font-size: 12px;
  background: var(--surface5a);
  padding-inline: 6px;
  padding-block: 2px;
  position: absolute;
  border-radius: var(--radius-5);
  right: calc(var(--space-xs) / 2 * -1);
  top: 0px;
}
.heading-main {
  display: flex;  
  align-items: center;
  background: var(--surface8);
  flex-grow: 1;
}

.heading-main h2 {
  font-weight: var(--font-weight-3);
  font-size: var(--heading-size);
  color: var(--text1);
  margin-inline: var(--space-xs);
}

heading-link {
  display: flex;
  gap: 2px;
  flex-wrap: wrap;
}

.heading-actions {
  align-self: start;
  display: flex;
  justify-content: end;
  gap: 2px;
  flex-grow: 1;
}

.action-box {
  background: var(--surface8);
  color: var(--text6);
  padding: var(--space-2xs);
}

.action-box a {
  color: currentColor;
}

.action-box .sr-only {
  color: initial;
}

.action-box a:is(:hover, :focus) {
  color: var(--text4);
}
.search-form {
  display: flex;
  align-self: start;
  justify-content: end;
  flex-shrink: 1;
  flex-grow: 1;
}

.search-form input {
  flex-shrink: 1;
  flex-grow: 1;
  width: 0;
  min-width: 11rem;
  max-width: 17rem;
  background-color: var(--surface8);
  color: var(--text1);
  
  border: 2px solid var(--surface13);
  border-radius: var(--radius-round);
  padding-block: var(--space-3xs);
  padding-inline: var(--space-xs) calc(var(--space-xl) - var(--space-2xs));
}

.search-form input:focus,
.search-form input:hover {
  border-color: var(--surface11);
}

.search-form button {
  color: var(--text5);
  background: var(--surface10);
  border-radius: var(--radius-round);
  padding-inline: var(--space-xs);
  margin-left: calc(var(--space-l) * -1);
}

.search-form button:focus,
.search-form button:hover {
  background: var(--surface11);
}
.btn-frame {
  display: block;
  text-align: center;
  width: 100%;
  --bg-color: var(--surface10);
  max-width: initial;
  font-size: var(--step-0);
  padding-block: var(--space-2xs);
  line-height: inherit;
  background: var(--bg-color);
  border-radius: var(--radius-round);
  color: var(--text5);
  border: 3px solid transparent;
  background-clip: padding-box;
}

.btn-load-more {
  border-color: var(--bg-color);
}

.btn-load-more,
.msg-no-more,
.msg-loading {
  display: none;
}

.msg-no-more,
.msg-loading {
  --bg-color: var(--surface12);
  color: var(--text1);
}

.btn-load-more[aria-disabled=false],
.btn-load-more[aria-disabled=true][ts-data] ~ .msg-loading,
.btn-load-more[aria-disabled=true]:not([ts-data]) ~ .msg-no-more {
  display: block;
}

.btn-load-more:focus,
.btn-load-more:hover {
  --bg-color: var(--surface11);
}

.btn-load-more:active {
  border-color: transparent;
}
.user a {
  color: currentColor;
  text-decoration: none;
}

.user-count {
  position: absolute;
  bottom: 0;
  left: 0;
  margin: var(--space-3xs);
  background-color: var(--gray-10);
  color: var(--gray-1);
  padding-inline: var(--space-3xs);
  font-size: var(--step--2);
  border-radius: var(--radius-1);
  opacity: .9;
}

.stream-title {
  display: flex;  
  justify-content: space-between;
  align-items: center;
  background: var(--surface8);
  padding: var(--space-3xs);
  border-radius: var(--radius-2);
}

.stream-title p {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.stream-title svg {
  flex-shrink: 0;
}

.user-link img {
  display: block;
  border-radius: var(--radius-2);
}

.user-info {
  display: flex;
  --info-bg: var(--surface8);
  background-color: var(--info-bg);
  border-bottom-right-radius: var(--radius-2);
  border-bottom-left-radius: var(--radius-2);
  padding: var(--space-2xs) var(--space-3xs);
  background-image: linear-gradient(var(--surface1), var(--info-bg) 5%);
}

.user-info-link {
  word-break: break-all;
}

.user-info-follow {
  display: flex;
  align-items: center;
  height: 100%;
  padding-left: var(--space-2xs);
  margin-left: var(--space-2xs);
  margin-right: var(--space-3xs);
  border-left: 1px solid var(--surface13);
}

.user a:is(:hover, :focus),
.user-info-img-link:is(:hover, :focus) + div .user-info-link {
  color: var(--text4);
  text-decoration: underline;
}

.user-info-img-link {
  align-self: start;
  border: 1px solid var(--surface13);
  flex: none;
}

.user-info-img-link:is(:hover, :focus) {
  border-color: currentColor;
}

.external-video {
  margin-top: var(--space-3xs);
  font-size: var(--step--1);
}

.external-video svg {
  display: inline;
  vertical-align: middle;
  margin-left: var(--space-3xs);
}
.game {
  display: flex;
  flex-direction: column;
  height: 100%;
}

.game-link {
  height: 100%;
  font-size: var(--step--1);
  text-decoration: none;
  color: var(--text1);
  background: var(--surface8);
  padding-inline: var(--space-2xs);
  padding-block: var(--space-3xs);
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
  overflow: hidden;
  border-bottom-right-radius: var(--radius-2);
  border-bottom-left-radius: var(--radius-2);
  text-align: center;
}

.img-wrapper:is(:hover, :focus) + .game-link,
.game-link:is(:hover, :focus) {
  color: var(--text4);
  text-decoration: underline;
}

.img-wrapper {
  padding-inline: var(--space-2xs);
  position: relative;
}

.game-img-link {
  display: block;
  border-top: 3px solid var(--surface8);
  border-left: 3px solid var(--surface8);
  border-right: 3px solid var(--surface8);
}

.game-img {
  width: 100%;
  background: var(--surface8);
  display: block;
}

.game-action {
  --actions-color: var(--gray-5);
  position: absolute;
  bottom: -8px;
  line-height: 1;
  width: 2.3em;
  height: 2.3em;
  display: flex;
  align-items: center;
  justify-content: center;
  background-image: linear-gradient(var(--surface9), var(--surface8) 80%);
}

.game-action svg {
  width: 1.1em; 
  height: 1.1em;
}

.game-action[data-pos=left] {
  left: 0;
  border-radius: 100% 100% 80% 0 / 100% 100% 100% 0;
}

.game-action[data-pos=right] {
  border-radius: 100% 100% 0 80% / 100% 100% 0 100%;
  right: 0;
}

.external-link {
  color: var(--gray-5);
}

.external-link:is(:hover, :focus) {
  color: var(--violet-8);
}
.filter-option {
  display: flex;
  align-items: center;
  color: var(--text5);
  background-color: var(--surface10);
  border-radius: var(--radius-3) var(--radius-6) var(--radius-6) var(--radius-3);
  padding-block: 4px;
  padding-inline: 4px var(--space-xs);
}

.filter-option input {
  appearance: none;
  margin: 0;
  /* For iOS < 15 to remove gradient background */
  background-color: white;
  color: currentColor;
  height: 1.68em;
  width: 1.68em;
  border-radius: var(--radius-1);
  display: grid;
  place-content: center;
  margin-inline-end: var(--space-2xs);
}

.filter-option input::before {
  content: '';
  height: 1.1em;
  width: 1.1em;
  transform-origin: center;
  clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
  background-color: var(--surface14);
  transform: scale(0);
}

.filter-option input:checked::before {
  transform: scale(1);
}

.filter-option:is(:hover, :focus-within) {
  background: var(--surface11);
}
.user-live {
  font-size: var(--step--2);
}

.user-live span {
  background-color: var(--surface16);
  border-radius: var(--radius-1);
  color: var(--text2);
  padding-inline: var(--space-3xs);
}

.user-live a {
  text-decoration: none;
  display: block;
  color: var(--text7);
  font-style: italic;
}

.user-live a:is(:hover, :focus) {
  color: var(--text4);
  text-decoration: underline;
}

.video-link {
  display: block;
  text-decoration: none;
  color: currentColor;
}

.video-link:is(:hover, :focus) {
  color: var(--text4);
  text-decoration: underline;
}

.video-img-wrapper {
  position: relative;
}

.video-img-wrapper img {
  display: block;
  border-radius: var(--radius-2);
}

.video-info {
  opacity: .9;
  position: absolute;
  left: 0;
  margin: var(--space-3xs);
}

.video-type {
  top: 0;
  border-radius: var(--radius-1);
  --bg-icon: white;
  color: var(--gray-10);
  background-color: var(--bg-icon);
  padding-inline: 3px;
}

.video-duration {
  bottom: 0;
  right: 0;
  font-size: var(--step--2);
  color: var(--gray-1);
  display: flex;
  justify-content: space-between;
}

.video-duration span {
  padding-inline: 3px;
  background-color: var(--gray-10);
  display: block;
  border-radius: var(--radius-1);
}

.video[data-video-type=archive] .video-type {
  --bg-icon: var(--lime-3);
}

.video[data-video-type=upload] .video-type {
  --bg-icon: var(--blue-3);
}

.video[data-video-type=highlight] .video-type {
  --bg-icon: var(--orange-3);
}

.video-title {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: var(--surface8);
  padding: var(--space-3xs);
  border-radius: var(--radius-2);
}

.video-title p {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

.video-title svg {
  flex-grow: 0;
  flex-shrink: 0;
}

.user-heading-box {
  display: flex;
  gap: var(--space-xs);
  flex-wrap: wrap;
  place-items: start;
  place-content: start;
}

.output-list.no-uploads li[data-video-type=upload],
.output-list.no-archives li[data-video-type=archive],
.output-list.no-highlights li[data-video-type=highlight] {
  display: none;
}

.filter-video-type {
  display: flex;
  gap: var(--space-s);
  flex-wrap: wrap;
}
.settings section {
  padding: var(--space-xs);
  background: var(--surface8);
}

.settings h4 {
  font-weight: var(--font-weight-6);
}

.settings input[type=text],
.settings input[type=number] {
  color: var(--text1);
  background-color: var(--surface8);
  border-color: var(--surface13);
  border-style: solid;
  padding-inline: var(--space-3xs);
}

.settings input[type=number] {
  max-width: 5rem;
}

.settings h3 + * {
  margin-top: var(--space-xs);
}

.settings button {
  background-color: var(--surface11);
  color: var(--text5);
  padding: var(--space-2xs);
  border-radius: var(--radius-2);
}

.settings button:is(:hover, :focus) {
  background-color: var(--surface15);
}

#form-category {
  width: min-content;
}

#pick-lang {
  min-width: none;
  max-width: none;
  width: 200px;
}


.enabled-languages > li {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  padding: var(--space-3xs);
}

.enabled-languages > li:nth-child(2n - 1) {
  background: var(--surface-19);
}

.enabled-languages > li button {
  margin-left: auto;
  padding: var(--space-3xs);
}

.add-lang {
  margin-left: var(--space-3xs);
}

.settings .remove-lang {
  background: var(--surface-17);
  color: var(--text-8);
}

.settings .remove-lang:is(:hover, :focus) {
  background: var(--surface-18);
}
