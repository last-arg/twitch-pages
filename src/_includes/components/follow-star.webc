<div webc:root>
  <template webc:type="render">
    function() {
      const arg_names = ["game", "stream", "search"]
      if (!arg_names.includes(this.arg)) {
        throw new Error(`'arg' attribute must be one of these values: ${arg_names.join(", ")}`)
      }
      const arg = this.arg;

      let click_fn = "";
      let external_link = "";
      let classes = "";
      let extra_args = "";
      let svg_empty = "";
      if (arg === "game") {
        click_fn = `$store.games.remove(game.id)`;
        external_link = `\`https://www.twitch.tv/directory/game/\${${arg}.name}\``;
      } else if (arg === "stream") {
        click_fn = `$store.streams.remove(${arg}.user_id)`;
        external_link = `\`https://www.twitch.tv/\${${arg}.user_login}/videos\``;
      } else if (arg === "search") {
        click_fn = `$store.games.toggle(${arg})`;
        external_link = `\`https://www.twitch.tv/directory/game/\${${arg}.name}\``;
        // TODO: reenable class when styling this again
        // classes = "btn-follow";
        extra_args = `x-data="{followed: false}" x-effect="followed = $store.games.hasId(${arg}.id)"`
        svg_empty = `<use href="/public/assets/icons.svg#star-empty"></use>`;
      }
      
      let span_extra = "";
      if (extra_args.length > 0) {
        span_extra = `x-text="followed ? 'UnFollow' : 'Follow'"`;
      }

      // TODO: replace button with <follow-game>/<follow-user>?
      // TODO: in search sidebar follow icons are wrong
      return `
        <button class="${classes}" x-on:click="${click_fn}" type="button" ${extra_args}>
          <svg aria-hidden="true" focusable="false">
            ${svg_empty}
            <use href="/public/assets/icons.svg#star-full"></use>
          </svg>
          <span class="sr-only" ${span_extra}>Follow/Unfollow</span>
        </button>
        <a x-bind:href="${external_link}">
          <svg aria-hidden="true" focusable="false">
            <use href="/public/assets/icons.svg#external-link"></use>
          </svg>
        </a>
      `
    }
  </template>
</div>
<style>
follow-star {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  background: var(--color-truegray-800);
  line-height: 1;
  padding: var(--space-3xs) var(--space-2xs);
  color: var(--color-truegray-400);
}

scroll-container follow-star {
  margin-inline-start: 1px;
}

follow-star button {
  background-color: transparent;
  padding: 0;
  cursor: pointer;
  color: inherit;
}

follow-star a {
  color: inherit;
}

follow-star a:hover,
follow-star a:focus,
follow-star button:hover,
follow-star button:focus {
  color: var(--color-violet-500);
}
</style>
