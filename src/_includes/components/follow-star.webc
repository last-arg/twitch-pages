<template webc:type="render">
  function() {
    const arg_names = ["game", "stream", "search"]
    if (!arg_names.includes(this.arg)) {
      throw new Error(`'arg' attribute must be one of these values: ${arg_names.join(", ")}`)
    }
    const arg = this.arg;

    let click_fn = "";
    let external_link = "";
    let classes = "";
    let extra_args = "";
    let svg_empty = "";
    if (arg === "game") {
      click_fn = `$store.games.remove(game.id)`;
      external_link = `\`https://www.twitch.tv/directory/game/\${${arg}.name}\``;
    } else if (arg === "stream") {
      click_fn = `$store.streams.remove(game.id)`;
      external_link = `\`https://www.twitch.tv/${arg}.user_login/videos\``;
    } else if (arg === "search") {
      click_fn = `$store.games.toggle(${arg}.id, ${arg}.name)`;
      external_link = `\`https://www.twitch.tv/directory/game/\${${arg}.name}\``;
      classes = "btn-follow";
      extra_args = `x-data="{followed: false}" x-effect="followed = $store.games.hasId(${arg}.id)" x-bind:aria-label="followed ? 'unfollow' : 'follow'"`
      svg_empty = `<use href="/public/assets/icons.svg#star-empty"></use>`;
    }

    return `
    <div class="flex flex-col justify-between bg-gray-800 ml-1px text-truegray-400 px-1.5 py-1.5">
      <button class="hover:text-violet-500 ${classes}"
        x-on:click="${click_fn}" type="button" aria-label="unfollow"
        ${extra_args}
      >
        <svg class="fill-current w-5 h-5">
          ${svg_empty}
          <use href="/public/assets/icons.svg#star-full"></use>
        </svg>
      </button>
      <a class="hover:text-violet-500" x-bind:href="${external_link}">
        <svg class="fill-current w-5 h-5">
          <use href="/public/assets/icons.svg#external-link"></use>
        </svg>
      </a>
    </div>
    `
  }
</template>
